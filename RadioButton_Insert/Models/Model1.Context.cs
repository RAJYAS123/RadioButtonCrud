//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RadioButton_Insert.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DatabaseContext : DbContext
    {
        public DatabaseContext()
            : base("name=DatabaseContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblAnswer> tblAnswers { get; set; }
        public virtual DbSet<tblQuestion> tblQuestions { get; set; }
        public virtual DbSet<tblResult> tblResults { get; set; }
    
        public virtual ObjectResult<GetAllQuestionAndAnswer_Result> GetAllQuestionAndAnswer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllQuestionAndAnswer_Result>("GetAllQuestionAndAnswer");
        }
    
        public virtual ObjectResult<JoinQuestionAndAnswer_Result> JoinQuestionAndAnswer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JoinQuestionAndAnswer_Result>("JoinQuestionAndAnswer");
        }
    
        public virtual int InsertQuestionAnsAnswer(Nullable<int> questionId, Nullable<int> selectedAnswer)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var selectedAnswerParameter = selectedAnswer.HasValue ?
                new ObjectParameter("SelectedAnswer", selectedAnswer) :
                new ObjectParameter("SelectedAnswer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQuestionAnsAnswer", questionIdParameter, selectedAnswerParameter);
        }
    
        public virtual int UpdateQuestionAnsAnswer(Nullable<int> questionId, Nullable<int> selectedAnswer)
        {
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var selectedAnswerParameter = selectedAnswer.HasValue ?
                new ObjectParameter("SelectedAnswer", selectedAnswer) :
                new ObjectParameter("SelectedAnswer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateQuestionAnsAnswer", questionIdParameter, selectedAnswerParameter);
        }
    
        public virtual ObjectResult<GetAnswer_Result> GetAnswer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAnswer_Result>("GetAnswer");
        }
    
        public virtual ObjectResult<GetQuestion_Result> GetQuestion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestion_Result>("GetQuestion");
        }
    
        public virtual ObjectResult<JoinQuestionAndAnswer1_Result> JoinQuestionAndAnswer1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JoinQuestionAndAnswer1_Result>("JoinQuestionAndAnswer1");
        }
    }
}
